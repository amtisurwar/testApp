{
  "@react-native-community/bob": {
    "source": "src",
    "output": "lib",
    "targets": [
      "commonjs",
      "module",
      "typescript"
    ]
  },
  "_args": [
    [
      {
        "raw": "react-native-safe-area-context",
        "scope": null,
        "escapedName": "react-native-safe-area-context",
        "name": "react-native-safe-area-context",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/myzealit/Desktop/kausar/testApp"
    ]
  ],
  "_from": "react-native-safe-area-context",
  "_hasShrinkwrap": false,
  "_id": "react-native-safe-area-context@0.6.2",
  "_location": "/react-native-safe-area-context",
  "_nodeVersion": "12.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-safe-area-context_0.6.2_1577814394828_0.8445854427128336"
  },
  "_npmUser": {
    "name": "janicduplessis",
    "email": "janicduplessis@gmail.com"
  },
  "_npmVersion": "6.11.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-safe-area-context",
    "scope": null,
    "escapedName": "react-native-safe-area-context",
    "name": "react-native-safe-area-context",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-safe-area-context/-/react-native-safe-area-context-0.6.2.tgz",
  "_shasum": "d467ac8a953426bfbb6d8f417222b0dc3952be7a",
  "_shrinkwrap": null,
  "_spec": "react-native-safe-area-context",
  "_where": "/Users/myzealit/Desktop/kausar/testApp",
  "author": {
    "name": "Janic Duplessis",
    "email": "janicduplessis@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/th3rdwave/react-native-safe-area-context/issues"
  },
  "contributors": [
    {
      "name": "Evan Bacon",
      "email": "bacon@expo.io",
      "url": "https://github.com/evanbacon"
    }
  ],
  "dependencies": {},
  "description": "A flexible way to handle safe area, also works on Android and web.",
  "devDependencies": {
    "@react-native-community/bob": "^0.7.0",
    "@react-native-community/eslint-config": "^0.0.5",
    "@types/jest": "^24.0.21",
    "@types/react": "^16.9.11",
    "@types/react-native": "^0.60.22",
    "@types/react-test-renderer": "^16.9.1",
    "@typescript-eslint/eslint-plugin": "^2.6.0",
    "@typescript-eslint/parser": "^2.6.0",
    "eslint": "6.6.0",
    "eslint-config-prettier": "^6.5.0",
    "eslint-plugin-prettier": "3.1.1",
    "expo": "^35.0.0",
    "jest": "^24.9.0",
    "metro-react-native-babel-preset": "^0.57.0",
    "prettier": "^1.18.2",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "react-native": "^0.61.0",
    "react-native-web": "^0.11.7",
    "react-test-renderer": "^16.11.0",
    "typescript": "^3.6.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-VtBW0JymVCwVt0TGxTv25Co3wtOv3Yb/K5pAUYkjKXNhWFDz5ZwUG/Yho/p0EkWYlFdroJcSqlvVFl2n3AU7SA==",
    "shasum": "d467ac8a953426bfbb6d8f417222b0dc3952be7a",
    "tarball": "https://registry.npmjs.org/react-native-safe-area-context/-/react-native-safe-area-context-0.6.2.tgz",
    "fileCount": 51,
    "unpackedSize": 120752,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeC4l7CRA9TVsSAnZWagAAqY8P/iMSzckx042FgdIbPeY2\n1ts+cGHxpptkY0XleRKp6iI5ExmrsoC1ezuZ0ME3gh1XjlhwSzr1ehtJuGXI\ndl5JVk7UIKjItbw72GoVi1EDmyYOB1aqIuu1Y80KrsS+KTuTx3r08kvTJn8H\nzmRGYETtZFNFc0vmXOYxQQN1UR5nV9SqJgay19OX0b+7wxM1Ehw6a6Lw3+Yx\no6fPISyrrRg5o0l/rkXfGdkONvS7rn/8aq8Zpgb+sMQCwF1a4GpFuQVaxQdc\n5exHOhKjVlIfk7bUPp4fl+U4kBC80uTn6IFJFlYjf/aSAQSt/1+2w3ATrIJq\nhRE1GbDQ1zB5W3VqQgHgQ+rEfUE+RWgH+RZ4f+YCnCUpy/ZSARI5fHIruk4s\nIblsc8EuiyQZ1X+ZlyP+MZdrthA5tXzYoll6GuJAGeAV8ZSle4g68roAOppe\nOMNlz3Itb9vXQuJnJKyWDb6OHfKFXDJou/ItuCn/ANcTDH0O/QOfgYNPEmUJ\ngRNRuhWcb5rN6EEAl60j8PTLy8jKMPzTz4CyGxKV1fSZ1H3jDl5hMtwzg91W\n3YGiKzvxaGosBZZ8wcWGt2f+yK+qNvyu831K5CiimLGdPWQSsqa+gqWICaZ2\nv1HLBmIMJAB57BOkQErUp6oCv0RYuTM44o94KwnlJJIzlDP134APoxc2luUx\njBbg\r\n=cnqd\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "/src",
    "/lib",
    "/android",
    "!/android/build",
    "/ios",
    "/*.podspec"
  ],
  "gitHead": "1ff90ed3104d84932ee22aaa008ab47933dc5134",
  "homepage": "https://github.com/th3rdwave/react-native-safe-area-context#readme",
  "jest": {
    "preset": "react-native",
    "testEnvironment": "node",
    "clearMocks": true,
    "modulePathIgnorePatterns": [
      "<rootDir>/lib/"
    ]
  },
  "keywords": [
    "react-native",
    "react native",
    "react-native-web",
    "expo-web",
    "safe area",
    "view"
  ],
  "license": "MIT",
  "main": "lib/commonjs/index.js",
  "maintainers": [
    {
      "name": "janicduplessis",
      "email": "janicduplessis@gmail.com"
    }
  ],
  "module": "lib/module/index.js",
  "name": "react-native-safe-area-context",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.59"
  },
  "react-native": "src/index.tsx",
  "readme": "# react-native-safe-area-context\n\n[![npm](https://img.shields.io/npm/v/react-native-safe-area-context)](https://www.npmjs.com/package/react-native-safe-area-context) [![Actions Status](https://6t2fa745na.execute-api.us-west-2.amazonaws.com/production/badge/th3rdwave/react-native-safe-area-context)](https://6t2fa745na.execute-api.us-west-2.amazonaws.com/production/results/th3rdwave/react-native-safe-area-context) ![Supports Android, iOS and web](https://img.shields.io/badge/platforms-android%20%7C%20ios%20%7C%20web-lightgrey.svg) ![MIT License](https://img.shields.io/npm/l/react-native-safe-area-context.svg)\n\nA flexible way to handle safe area, also works on Android and Web!\n\n## Getting started\n\nInstall the library using either Yarn:\n\n```\nyarn add react-native-safe-area-context\n```\n\nor npm:\n\n```\nnpm install --save react-native-safe-area-context\n```\n\nYou then need to link the native parts of the library for the platforms you are using. The easiest way to link the library is using the CLI tool by running this command from the root of your project:\n\n```\nreact-native link react-native-safe-area-context\n```\n\nIf you can't or don't want to use the CLI tool, you can also manually link the library using the instructions below (click on the arrow to show them):\n\n<details>\n<summary>Manually link the library on iOS</summary>\n\nEither follow the [instructions in the React Native documentation](https://facebook.github.io/react-native/docs/linking-libraries-ios#manual-linking) to manually link the framework or link using [Cocoapods](https://cocoapods.org) by adding this to your `Podfile`:\n\n```ruby\npod 'react-native-safe-area-context', :path => '../node_modules/react-native-safe-area-context'\n```\n\n</details>\n\n<details>\n<summary>Manually link the library on Android</summary>\n\nMake the following changes:\n\n#### `android/settings.gradle`\n```groovy\ninclude ':react-native-safe-area-context'\nproject(':react-native-safe-area-context').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-safe-area-context/android')\n```\n\n#### `android/app/build.gradle`\n```groovy\ndependencies {\n   ...\n   implementation project(':react-native-safe-area-context')\n}\n```\n\n#### `android/app/src/main/.../MainApplication.java`\nOn top, where imports are:\n\n```java\nimport com.th3rdwave.safeareacontext.SafeAreaContextPackage;\n```\n\nAdd the `SafeAreaContextPackage` class to your list of exported packages.\n\n```java\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.asList(\n            new MainReactPackage(),\n            new SafeAreaContextPackage()\n    );\n}\n```\n</details>\n\n## Usage\n\nAdd `SafeAreaProvider` in your app root component:\n\n```js\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nfunction App() {\n  return (\n    <SafeAreaProvider>\n      ...\n    </SafeAreaProvider>\n  );\n}\n```\n\nUsage with hooks api:\n\n```js\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nfunction HookComponent() {\n  const insets = useSafeArea();\n\n  return <View style={{ paddingTop: insets.top }} />;\n}\n```\n\nUsage with consumer api:\n\n```js\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\n\nclass ClassComponent extends React.Component {\n  render() {\n    return (\n      <SafeAreaConsumer>\n        {insets => <View style={{ paddingTop: insets.top }} />}\n      </SafeAreaConsumer>\n    );\n  }\n}\n```\n\nUsage with `SafeAreaView`:\n\n```js\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nfunction SomeComponent() {\n  return (\n    <SafeAreaView>\n      <View />\n    </SafeAreaView>\n  );\n}\n```\n\n### Web SSR\n\nIf you are doing server side rendering on the web you can use `initialSafeAreaInsets` to inject insets value based on the device the user has, or simply pass zero values. Since insets measurement is async it will break rendering your page content otherwise.\n\n## Resources\n\n- Great article about how this library can be used: https://dev.to/brunolemos/adding-notch-support-to-your-react-native-android-app-3ci3\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/th3rdwave/react-native-safe-area-context.git"
  },
  "scripts": {
    "prepare": "bob build",
    "start": "react-native start",
    "test": "yarn validate:prettier && yarn validate:eslint && yarn validate:typescript",
    "validate:eslint": "eslint \"src/**/*.{js,ts,tsx}\" \"example/**/*.{js,ts,tsx}\"",
    "validate:jest": "jest",
    "validate:prettier": "prettier \"src/**/*.{js,ts,tsx}\" \"example/**/*.{js,ts,tsx}\" --check",
    "validate:typescript": "tsc --project ./ --noEmit"
  },
  "sideEffects": false,
  "types": "lib/typescript/src/index.d.ts",
  "version": "0.6.2"
}
